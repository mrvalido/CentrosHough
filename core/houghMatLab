/*
 * hough.cpp
 *
 *  Created on: Mar 12, 2016
 *      Author: mrv
 */


/*
function matrixMaxze=hough_v4(P,pairSubset,cx,cy,radio,presicion)
% %
%	Implementacion de la transformada de hough.
%		[xc,yc,r]=hough(imb,radio)
%
%		Puntos   -   vector de coordenadas de puntos blancos
%		radio - estimacion del radio.
%
%	[im,jm,r] - coordenadas del centro del circulo
%				y radio de este.
%



if presicion == 1
    Ancho=4;%grosor en pixeles de aro entoro al 1% de radio del disco
    Rmin=radio-Ancho/2;
    Rmax=radio+Ancho/2;
    PASO_RADIO=0.25;
    paso=0.1;
    xc=cx;
    yc=cy;


    despla_max=15 %pixeles maximo entorno al centro en presicion fina
    Xmin=xc-despla_max%// Xmin and Xmax are boundaries of coordinates of initial center
    Xmax=xc+despla_max
    Ymin=yc-despla_max%// Ymin and Ymax are boundaries of coordinates of initial center
    Ymax=yc+despla_max
    dimensionAcumulador=floor((Xmax-Xmin)/paso)+1

else

    %randomize=0.25 ;%factor numero de numeros que cojo
    Ancho=4;%grosor en pixeles de aro entoro al 1% de radio del disco
    Rmin=radio-Ancho/2;
    Rmax=radio+Ancho/2;
    PASO_RADIO=0.25;
    paso=1;

    despla_max=400; %porcentaje del maximo
                    %desplazamiento del disco solar 250 apro 20%
    xc=cx;
    yc=cy;
    Xmin=xc-despla_max; %xc-paso*(dimensionAcumulador/2);%// Xmin and Xmax are boundaries of coordinates of initial center
    Xmax=xc+despla_max;
    Ymin=yc-despla_max; %// Ymin and Ymax are boundaries of coordinates of initial center
    Ymax=yc+despla_max;
    dimensionAcumulador=floor((Xmax-Xmin)/paso)+1
end

lmax=(Rmax-Rmin)/PASO_RADIO+1
matrixMaxze=zeros(lmax,4);
lmax

% imb=imbs(:,:,1);
I=P(:,1);%filas coordenada y
J=P(:,2);%columnas coordenada x
% coordenadas Ptos que 'blancos' filas columnas
% npairs=length(I)%NUMERO DE PARES DE PUNTOS
% perm = randperm(npairs); % P = randperm(N) returns a vector containing a random permutat                                            %integers 1:N.  For example, randperm(6) might be [2 4 5 6 1 3].
% pairSubset = perm(1:min(npairs,floor(npairs*randomize)));
% clear perm;
%         fprintf('..after randomization: %d\n', length(pairSubset));
%


 thresh=4;
l=1;
for r=Rmin:PASO_RADIO:Rmax;									% Para un rango de radios realiza
   % r=radio + (l - (floor((lmax/2))+1))*FACTOR_RADIO;

    acu_ini=zeros(dimensionAcumulador);
    l
	for k=1:length(pairSubset)
		j=I(pairSubset(k));i=J(pairSubset(k));%PARA CADA PUNTO K EXTRAIGO COORDENADAS
		for a=Xmin:paso:Xmax %RECORRO TODOS LOS POSIBLES VALORES DE A COMO POSIBLE
            % CENTRO DEPENDE DEL TAMA?O DE LA IMAGEN
			det=r*r-(i-a)*(i-a);
			if (det>0)
				b=(j-sqrt(det));
				if b>Ymin && b<Ymax
					%acu(a,b)=acu(a,b)+1;	% Voto
                    aa=round((a-Xmin)/paso);
					bb=round((b-Ymin)/paso);
                    if bb>0 && aa>0
                        acu_ini(bb,aa)=acu_ini(bb,aa)+1;
                    end

				end

			end
		end
    end
% figure,imagesc(acu_ini);
% pause
[Valor,II] = max(acu_ini(:));
%
[I_row, I_col] = ind2sub(size(acu_ini),II);

%[xm,ym,Valor]=localmax(acu_ini,thresh);


% 		//Introducimos los valores del maximo en la matrizMaximo
%   		matrixMaxze(l,1) = Valor;
%   		matrixMaxze(l,2) = xm*paso+Xmin;%coordenada x (columnas)
%   		matrixMaxze(l,3) = ym*paso+Ymin;%coordenada y (Filas)
% 		matrixMaxze(l,4) = r;
        matrixMaxze(l,1) = Valor;
  		matrixMaxze(l,2) = I_col*paso+Xmin;%coordenada x (columnas)
  		matrixMaxze(l,3) = I_row*paso+Ymin;%coordenada y (Filas)
		matrixMaxze(l,4) = r;

        l=l+1;



end



*/
